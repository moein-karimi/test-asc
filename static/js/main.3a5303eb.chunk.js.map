{"version":3,"sources":["api/asanshahr.js","components/list.js","redux/list/actions.list.js","pages/homePage.js","redux/login/actions.login.js","components/login.js","pages/loginPage/loginPage.js","components/header.js","App.js","redux/list/list.reducer.js","redux/login/login.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["axios","create","baseURL","List","this","props","fetchList","list","className","style","margin","map","item","display","justifyContent","key","id","address","floorMaterialType","name","heatingSystemType","airConditioningSystemType","residenceStatusType","alignItems","paddingRight","area","preRent","rent","renderList","React","Component","connect","state","currentList","dispatch","a","asanshahr","get","response","type","payload","data","HomePage","isLogin","onSubmit","e","preventDefault","placeholder","onClick","LoginPage","login","to","process","exact","path","component","render","INITIAL_STATE","listReducer","action","loginReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a5303eb.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nexport default axios.create({\r\n  baseURL: `${proxy}http://api.asanshahr.com/api`\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchList } from '../redux/list/actions.list';\r\n\r\nclass List extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchList();\r\n  }\r\n\r\n  renderList() {\r\n    const { list } = this.props;\r\n\r\n    if (list === null) {\r\n      return <div className=\"ui active loader\"></div>;\r\n    }\r\n\r\n    return (\r\n      <div style={{ margin: '10px 50px' }} className=\"list-container\">\r\n        <div className=\"ui inverted segment\">\r\n          <div className=\"ui inverted relaxed divided list\">\r\n            {list.map(item => (\r\n              <div\r\n                style={{ display: 'flex', justifyContent: 'center' }}\r\n                className=\"item\"\r\n                key={item.id}\r\n              >\r\n                <div className=\"content\">\r\n                  <div className=\"header\">\r\n                    آدرس:<span> </span>\r\n                    {item.address === null ? (\r\n                      <i className=\"home icon\"></i>\r\n                    ) : (\r\n                      item.address\r\n                    )}\r\n                  </div>\r\n                  <span>{item.floorMaterialType.name}&#9734;</span>\r\n                  <span>\r\n                    {item.heatingSystemType === null ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.heatingSystemType.name\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    &#9734;\r\n                    {item.airConditioningSystemType === null ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.airConditioningSystemType.name\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    &#9734;\r\n                    {item.residenceStatusType === null ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.residenceStatusType.name\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    paddingRight: '20px'\r\n                  }}\r\n                >\r\n                  <span>\r\n                    متراژ:<span> </span>\r\n                    {item.area === null || item.area === 0 ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.area\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    &#9734; ودیعه:<span> </span>\r\n                    {item.preRent === null || item.preRent === 0 ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.preRent\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    &#9734; اجاره:<span> </span>\r\n                    {item.rent === null || item.rent === 0 ? (\r\n                      <i className=\"phone icon\"></i>\r\n                    ) : (\r\n                      item.rent\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { list: state.list.currentList };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchList }\r\n)(List);\r\n","import asanshahr from '../../api/asanshahr';\r\n\r\nexport const fetchList = () => async dispatch => {\r\n  const response = await asanshahr.get('/offers?pageSize=10&pageNumber=1');\r\n\r\n  dispatch({ type: 'FETCH_LIST', payload: response.data });\r\n};\r\n","import React from 'react';\r\nimport List from '../components/list';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <List />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","export const isLogin = () => ({\r\n  type: 'LOGIN'\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isLogin } from '../redux/login/actions.login';\r\n\r\nconst Login = ({ isLogin }) => (\r\n  <div>\r\n    <form onSubmit={e => e.preventDefault()} className=\"ui form\">\r\n      <div className=\"field\">\r\n        <label>نام</label>\r\n        <input type=\"text\" name=\"first-name\" placeholder=\"آسان\" />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>نام خانوادگی</label>\r\n        <input type=\"text\" name=\"last-name\" placeholder=\"شهر\" />\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          isLogin();\r\n        }}\r\n        className=\"ui button\"\r\n        type=\"submit\"\r\n      >\r\n        ورود\r\n      </button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  { isLogin }\r\n)(Login);\r\n","import React from 'react';\r\nimport Login from '../../components/login';\r\nimport './loginPage.styles.css';\r\n\r\nconst LoginPage = () => (\r\n  <div className=\"ui container\">\r\n    <Login />\r\n  </div>\r\n);\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isLogin } from '../redux/login/actions.login';\r\n\r\nconst Header = ({ login, isLogin }) => (\r\n  <div style={{ margin: '10px 50px' }} className=\"ui inverted menu\">\r\n    <Link to={process.env.PUBLIC_URL + '/'} className=\"active item\">\r\n      خانه\r\n    </Link>\r\n    {login ? (\r\n      <div onClick={() => isLogin()} className=\"item\">\r\n        خروج\r\n      </div>\r\n    ) : (\r\n      <Link to={process.env.PUBLIC_URL + '/login'} className=\"item\">\r\n        ورود\r\n      </Link>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return { login: state.login.isLogin };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { isLogin }\r\n)(Header);\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport HomePage from '../src/pages/homePage';\nimport LoginPage from './pages/loginPage/loginPage';\nimport Header from './components/header';\n\nfunction App({ login }) {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={HomePage} />\n        <Route\n          exact\n          path={process.env.PUBLIC_URL + '/login'}\n          render={() =>\n            login ? (\n              <Redirect to={process.env.PUBLIC_URL + '/'} />\n            ) : (\n              <LoginPage />\n            )\n          }\n        />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return { login: state.login.isLogin };\n};\n\nexport default connect(mapStateToProps)(App);\n","const INITIAL_STATE = { currentList: null };\r\n\r\nconst listReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_LIST':\r\n      return {\r\n        ...state,\r\n        currentList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","const INITIAL_STATE = { isLogin: false };\r\n\r\nconst loginReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isLogin: !state.isLogin\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport listReducer from './list/list.reducer';\r\nimport loginReducer from './login/login.reducer';\r\n\r\nexport default combineReducers({\r\n  list: listReducer,\r\n  login: loginReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}